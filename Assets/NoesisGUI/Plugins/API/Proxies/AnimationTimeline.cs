//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class AnimationTimeline : Timeline {
  internal new static AnimationTimeline CreateProxy(IntPtr cPtr, bool cMemoryOwn) {
    return new AnimationTimeline(cPtr, cMemoryOwn);
  }

  internal AnimationTimeline(IntPtr cPtr, bool cMemoryOwn) : base(cPtr, cMemoryOwn) {
  }

  internal static HandleRef getCPtr(AnimationTimeline obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  protected AnimationTimeline() {
  }

  public object GetCurrentValue(object defaultOriginValue, object defaultDestinationValue, AnimationClock animationClock) {
    IntPtr cPtr = GetCurrentValueHelper(defaultOriginValue, defaultDestinationValue, animationClock);
    return Noesis.Extend.GetProxy(cPtr, true);
  }

  public static DependencyProperty IsAdditiveProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.AnimationTimeline_IsAdditiveProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty IsCumulativeProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.AnimationTimeline_IsCumulativeProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public bool IsAdditive {
    set {
      NoesisGUI_PINVOKE.AnimationTimeline_IsAdditive_set(swigCPtr, value);
    } 
    get {
      bool ret = NoesisGUI_PINVOKE.AnimationTimeline_IsAdditive_get(swigCPtr);
      return ret;
    } 
  }

  public bool IsCumulative {
    set {
      NoesisGUI_PINVOKE.AnimationTimeline_IsCumulative_set(swigCPtr, value);
    } 
    get {
      bool ret = NoesisGUI_PINVOKE.AnimationTimeline_IsCumulative_get(swigCPtr);
      return ret;
    } 
  }

  private IntPtr GetCurrentValueHelper(object defValSrc, object defValDest, AnimationClock clock) {
    IntPtr ret = NoesisGUI_PINVOKE.AnimationTimeline_GetCurrentValueHelper(swigCPtr, Noesis.Extend.GetInstanceHandle(defValSrc), Noesis.Extend.GetInstanceHandle(defValDest), AnimationClock.getCPtr(clock));
    return ret;
  }

  new internal static IntPtr GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.AnimationTimeline_GetStaticType();
    return ret;
  }

}

}

