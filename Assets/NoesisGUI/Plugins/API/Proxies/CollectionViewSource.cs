//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class CollectionViewSource : DependencyObject {
  internal new static CollectionViewSource CreateProxy(IntPtr cPtr, bool cMemoryOwn) {
    return new CollectionViewSource(cPtr, cMemoryOwn);
  }

  internal CollectionViewSource(IntPtr cPtr, bool cMemoryOwn) : base(cPtr, cMemoryOwn) {
  }

  internal static HandleRef getCPtr(CollectionViewSource obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  public CollectionViewSource() {
  }

  protected override IntPtr CreateCPtr(Type type, out bool registerExtend) {
    registerExtend = false;
    return NoesisGUI_PINVOKE.new_CollectionViewSource();
  }

  public static DependencyProperty CollectionViewTypeProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.CollectionViewSource_CollectionViewTypeProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty SourceProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.CollectionViewSource_SourceProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty ViewProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.CollectionViewSource_ViewProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public Type CollectionViewType {
    set {
      NoesisGUI_PINVOKE.CollectionViewSource_CollectionViewType_set(swigCPtr, new HandleRef(value, (value != null ? Noesis.Extend.GetNativeType(value) : IntPtr.Zero)));
    }
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.CollectionViewSource_CollectionViewType_get(swigCPtr);
      if (cPtr != IntPtr.Zero) {
        Noesis.Extend.NativeTypeInfo info = Noesis.Extend.GetNativeTypeInfo(cPtr);
        return info.Type;
      }
      return null;
    }
  }

  public object Source {
    set {
      NoesisGUI_PINVOKE.CollectionViewSource_Source_set(swigCPtr, Noesis.Extend.GetInstanceHandle(value));
    }
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.CollectionViewSource_Source_get(swigCPtr);
      return Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public CollectionView View {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.CollectionViewSource_View_get(swigCPtr);
      return (CollectionView)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  new internal static IntPtr GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.CollectionViewSource_GetStaticType();
    return ret;
  }

}

}

