//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class GradientStop : Animatable {
  internal new static GradientStop CreateProxy(IntPtr cPtr, bool cMemoryOwn) {
    return new GradientStop(cPtr, cMemoryOwn);
  }

  internal GradientStop(IntPtr cPtr, bool cMemoryOwn) : base(cPtr, cMemoryOwn) {
  }

  internal static HandleRef getCPtr(GradientStop obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  public GradientStop() {
  }

  protected override IntPtr CreateCPtr(Type type, out bool registerExtend) {
    registerExtend = false;
    return NoesisGUI_PINVOKE.new_GradientStop();
  }

  public override string ToString() {
    IntPtr strPtr = NoesisGUI_PINVOKE.GradientStop_ToString(swigCPtr);
    string str = Noesis.Extend.StringFromNativeUtf8(strPtr);
    NoesisGUI_PINVOKE.FreeString(strPtr);
    return str;
  }

  public static DependencyProperty ColorProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.GradientStop_ColorProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty OffsetProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.GradientStop_OffsetProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public Color Color {
    set {
      NoesisGUI_PINVOKE.GradientStop_Color_set(swigCPtr, ref value);
    }

    get {
      IntPtr ret = NoesisGUI_PINVOKE.GradientStop_Color_get(swigCPtr);
      if (ret != IntPtr.Zero) {
        return Marshal.PtrToStructure<Color>(ret);
      }
      else {
        return new Color();
      }
    }

  }

  public float Offset {
    set {
      NoesisGUI_PINVOKE.GradientStop_Offset_set(swigCPtr, value);
    } 
    get {
      float ret = NoesisGUI_PINVOKE.GradientStop_Offset_get(swigCPtr);
      return ret;
    } 
  }

  new internal static IntPtr GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.GradientStop_GetStaticType();
    return ret;
  }

}

}

