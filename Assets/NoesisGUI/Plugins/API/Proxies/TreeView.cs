//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class TreeView : ItemsControl {
  internal new static TreeView CreateProxy(IntPtr cPtr, bool cMemoryOwn) {
    return new TreeView(cPtr, cMemoryOwn);
  }

  internal TreeView(IntPtr cPtr, bool cMemoryOwn) : base(cPtr, cMemoryOwn) {
  }

  internal static HandleRef getCPtr(TreeView obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  #region Events

  public event RoutedPropertyChangedEventHandler<object> SelectedItemChanged {
    add {
      AddHandler(SelectedItemChangedEvent, value);
    }
    remove {
      RemoveHandler(SelectedItemChangedEvent, value);
    }
  }
  #endregion

  public TreeView() {
  }

  protected override IntPtr CreateCPtr(Type type, out bool registerExtend) {
    if ((object)type.TypeHandle == typeof(TreeView).TypeHandle) {
      registerExtend = false;
      return NoesisGUI_PINVOKE.new_TreeView();
    }
    else {
      return base.CreateExtendCPtr(type, out registerExtend);
    }
  }

  public static DependencyProperty SelectedItemProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.TreeView_SelectedItemProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedEvent SelectedItemChangedEvent {
    set {
      NoesisGUI_PINVOKE.TreeView_SelectedItemChangedEvent_set(RoutedEvent.getCPtr(value));
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.TreeView_SelectedItemChangedEvent_get();
      return (RoutedEvent)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public object SelectedItem {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.TreeView_SelectedItem_get(swigCPtr);
      return Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  new internal static IntPtr GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.TreeView_GetStaticType();
    return ret;
  }

  internal new static IntPtr Extend(string typeName) {
    return NoesisGUI_PINVOKE.Extend_TreeView(Marshal.StringToHGlobalAnsi(typeName));
  }
}

}

