//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class ScrollChangedEventArgs : RoutedEventArgs {
  private HandleRef swigCPtr;

  internal ScrollChangedEventArgs(IntPtr cPtr, bool cMemoryOwn) : base(cPtr, cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(ScrollChangedEventArgs obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~ScrollChangedEventArgs() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          NoesisGUI_PINVOKE.delete_ScrollChangedEventArgs(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  internal static new void InvokeHandler(Delegate handler, IntPtr sender, IntPtr args) {
    ScrollChangedEventHandler handler_ = (ScrollChangedEventHandler)handler;
    if (handler_ != null) {
      handler_(Extend.GetProxy(sender, false), new ScrollChangedEventArgs(args, false));
    }
  }

  public float ExtentHeight {
    get {
      float ret = NoesisGUI_PINVOKE.ScrollChangedEventArgs_ExtentHeight_get(swigCPtr);
      return ret;
    } 
  }

  public float ExtentHeightChange {
    get {
      float ret = NoesisGUI_PINVOKE.ScrollChangedEventArgs_ExtentHeightChange_get(swigCPtr);
      return ret;
    } 
  }

  public float ExtentWidth {
    get {
      float ret = NoesisGUI_PINVOKE.ScrollChangedEventArgs_ExtentWidth_get(swigCPtr);
      return ret;
    } 
  }

  public float ExtentWidthChange {
    get {
      float ret = NoesisGUI_PINVOKE.ScrollChangedEventArgs_ExtentWidthChange_get(swigCPtr);
      return ret;
    } 
  }

  public float HorizontalChange {
    get {
      float ret = NoesisGUI_PINVOKE.ScrollChangedEventArgs_HorizontalChange_get(swigCPtr);
      return ret;
    } 
  }

  public float HorizontalOffset {
    get {
      float ret = NoesisGUI_PINVOKE.ScrollChangedEventArgs_HorizontalOffset_get(swigCPtr);
      return ret;
    } 
  }

  public float VerticalChange {
    get {
      float ret = NoesisGUI_PINVOKE.ScrollChangedEventArgs_VerticalChange_get(swigCPtr);
      return ret;
    } 
  }

  public float VerticalOffset {
    get {
      float ret = NoesisGUI_PINVOKE.ScrollChangedEventArgs_VerticalOffset_get(swigCPtr);
      return ret;
    } 
  }

  public float ViewportHeight {
    get {
      float ret = NoesisGUI_PINVOKE.ScrollChangedEventArgs_ViewportHeight_get(swigCPtr);
      return ret;
    } 
  }

  public float ViewportHeightChange {
    get {
      float ret = NoesisGUI_PINVOKE.ScrollChangedEventArgs_ViewportHeightChange_get(swigCPtr);
      return ret;
    } 
  }

  public float ViewportWidth {
    get {
      float ret = NoesisGUI_PINVOKE.ScrollChangedEventArgs_ViewportWidth_get(swigCPtr);
      return ret;
    } 
  }

  public float ViewportWidthChange {
    get {
      float ret = NoesisGUI_PINVOKE.ScrollChangedEventArgs_ViewportWidthChange_get(swigCPtr);
      return ret;
    } 
  }

  public ScrollChangedEventArgs(object s) : this(NoesisGUI_PINVOKE.new_ScrollChangedEventArgs(Noesis.Extend.GetInstanceHandle(s)), true) {
  }

}

}

