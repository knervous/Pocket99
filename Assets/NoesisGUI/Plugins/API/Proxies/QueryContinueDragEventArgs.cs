//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class QueryContinueDragEventArgs : RoutedEventArgs {
  private HandleRef swigCPtr;

  internal QueryContinueDragEventArgs(IntPtr cPtr, bool cMemoryOwn) : base(cPtr, cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(QueryContinueDragEventArgs obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~QueryContinueDragEventArgs() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          NoesisGUI_PINVOKE.delete_QueryContinueDragEventArgs(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  internal static new void InvokeHandler(Delegate handler, IntPtr sender, IntPtr args) {
    QueryContinueDragEventHandler handler_ = (QueryContinueDragEventHandler)handler;
    if (handler_ != null) {
      handler_(Extend.GetProxy(sender, false), new QueryContinueDragEventArgs(args, false));
    }
  }

  public bool EscapePressed {
    get {
      bool ret = NoesisGUI_PINVOKE.QueryContinueDragEventArgs_EscapePressed_get(swigCPtr);
      return ret;
    } 
  }

  public uint KeyStates {
    get {
      uint ret = NoesisGUI_PINVOKE.QueryContinueDragEventArgs_KeyStates_get(swigCPtr);
      return ret;
    } 
  }

  public DragAction Action {
    set {
      NoesisGUI_PINVOKE.QueryContinueDragEventArgs_Action_set(swigCPtr, (int)value);
    } 
    get {
      DragAction ret = (DragAction)NoesisGUI_PINVOKE.QueryContinueDragEventArgs_Action_get(swigCPtr);
      return ret;
    } 
  }

  public QueryContinueDragEventArgs(object source, RoutedEvent arg1, bool escapePressed, uint dragDropKeyStates) : this(NoesisGUI_PINVOKE.new_QueryContinueDragEventArgs(Noesis.Extend.GetInstanceHandle(source), RoutedEvent.getCPtr(arg1), escapePressed, dragDropKeyStates), true) {
  }

}

}

