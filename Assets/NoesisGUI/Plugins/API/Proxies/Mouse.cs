//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class Mouse : BaseComponent {
  internal new static Mouse CreateProxy(IntPtr cPtr, bool cMemoryOwn) {
    return new Mouse(cPtr, cMemoryOwn);
  }

  internal Mouse(IntPtr cPtr, bool cMemoryOwn) : base(cPtr, cMemoryOwn) {
  }

  internal static HandleRef getCPtr(Mouse obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  protected Mouse() {
  }

  public Point Position {
    get {
      Point pos;
      GetPositionHelper(out pos);
      return pos;
    }
  }

  public static Point GetPosition(UIElement relativeTo) {
    IntPtr ret = NoesisGUI_PINVOKE.Mouse_GetPosition(UIElement.getCPtr(relativeTo));
    if (ret != IntPtr.Zero) {
      return Marshal.PtrToStructure<Point>(ret);
    }
    else {
      return new Point();
    }
  }

  public MouseButtonState GetButtonState(MouseButton button) {
    MouseButtonState ret = (MouseButtonState)NoesisGUI_PINVOKE.Mouse_GetButtonState(swigCPtr, (int)button);
    return ret;
  }

  public bool Capture(UIElement element, CaptureMode mode) {
    bool ret = NoesisGUI_PINVOKE.Mouse_Capture__SWIG_0(swigCPtr, UIElement.getCPtr(element), (int)mode);
    return ret;
  }

  public bool Capture(UIElement element) {
    bool ret = NoesisGUI_PINVOKE.Mouse_Capture__SWIG_1(swigCPtr, UIElement.getCPtr(element));
    return ret;
  }

  public static RoutedEvent GotMouseCaptureEvent {
    set {
      NoesisGUI_PINVOKE.Mouse_GotMouseCaptureEvent_set(RoutedEvent.getCPtr(value));
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.Mouse_GotMouseCaptureEvent_get();
      return (RoutedEvent)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedEvent LostMouseCaptureEvent {
    set {
      NoesisGUI_PINVOKE.Mouse_LostMouseCaptureEvent_set(RoutedEvent.getCPtr(value));
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.Mouse_LostMouseCaptureEvent_get();
      return (RoutedEvent)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedEvent MouseDownEvent {
    set {
      NoesisGUI_PINVOKE.Mouse_MouseDownEvent_set(RoutedEvent.getCPtr(value));
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.Mouse_MouseDownEvent_get();
      return (RoutedEvent)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedEvent MouseEnterEvent {
    set {
      NoesisGUI_PINVOKE.Mouse_MouseEnterEvent_set(RoutedEvent.getCPtr(value));
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.Mouse_MouseEnterEvent_get();
      return (RoutedEvent)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedEvent MouseLeaveEvent {
    set {
      NoesisGUI_PINVOKE.Mouse_MouseLeaveEvent_set(RoutedEvent.getCPtr(value));
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.Mouse_MouseLeaveEvent_get();
      return (RoutedEvent)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedEvent MouseMoveEvent {
    set {
      NoesisGUI_PINVOKE.Mouse_MouseMoveEvent_set(RoutedEvent.getCPtr(value));
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.Mouse_MouseMoveEvent_get();
      return (RoutedEvent)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedEvent MouseUpEvent {
    set {
      NoesisGUI_PINVOKE.Mouse_MouseUpEvent_set(RoutedEvent.getCPtr(value));
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.Mouse_MouseUpEvent_get();
      return (RoutedEvent)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedEvent MouseWheelEvent {
    set {
      NoesisGUI_PINVOKE.Mouse_MouseWheelEvent_set(RoutedEvent.getCPtr(value));
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.Mouse_MouseWheelEvent_get();
      return (RoutedEvent)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedEvent PreviewMouseDownEvent {
    set {
      NoesisGUI_PINVOKE.Mouse_PreviewMouseDownEvent_set(RoutedEvent.getCPtr(value));
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.Mouse_PreviewMouseDownEvent_get();
      return (RoutedEvent)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedEvent PreviewMouseMoveEvent {
    set {
      NoesisGUI_PINVOKE.Mouse_PreviewMouseMoveEvent_set(RoutedEvent.getCPtr(value));
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.Mouse_PreviewMouseMoveEvent_get();
      return (RoutedEvent)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedEvent PreviewMouseUpEvent {
    set {
      NoesisGUI_PINVOKE.Mouse_PreviewMouseUpEvent_set(RoutedEvent.getCPtr(value));
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.Mouse_PreviewMouseUpEvent_get();
      return (RoutedEvent)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedEvent PreviewMouseWheelEvent {
    set {
      NoesisGUI_PINVOKE.Mouse_PreviewMouseWheelEvent_set(RoutedEvent.getCPtr(value));
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.Mouse_PreviewMouseWheelEvent_get();
      return (RoutedEvent)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedEvent QueryCursorEvent {
    set {
      NoesisGUI_PINVOKE.Mouse_QueryCursorEvent_set(RoutedEvent.getCPtr(value));
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.Mouse_QueryCursorEvent_get();
      return (RoutedEvent)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public UIElement Captured {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.Mouse_Captured_get(swigCPtr);
      return (UIElement)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  private void GetPositionHelper(out Point pos) {
    NoesisGUI_PINVOKE.Mouse_GetPositionHelper(swigCPtr, out pos);
  }

}

}

