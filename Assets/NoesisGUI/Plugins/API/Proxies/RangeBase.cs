//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class RangeBase : Control {
  internal new static RangeBase CreateProxy(IntPtr cPtr, bool cMemoryOwn) {
    return new RangeBase(cPtr, cMemoryOwn);
  }

  internal RangeBase(IntPtr cPtr, bool cMemoryOwn) : base(cPtr, cMemoryOwn) {
  }

  internal static HandleRef getCPtr(RangeBase obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  #region Events

  public event RoutedPropertyChangedEventHandler<float> ValueChanged {
    add {
      AddHandler(ValueChangedEvent, value);
    }
    remove {
      RemoveHandler(ValueChangedEvent, value);
    }
  }
  #endregion

  protected RangeBase() {
  }

  public static DependencyProperty LargeChangeProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.RangeBase_LargeChangeProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty MaximumProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.RangeBase_MaximumProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty MinimumProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.RangeBase_MinimumProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty SmallChangeProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.RangeBase_SmallChangeProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty ValueProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.RangeBase_ValueProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedEvent ValueChangedEvent {
    set {
      NoesisGUI_PINVOKE.RangeBase_ValueChangedEvent_set(RoutedEvent.getCPtr(value));
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.RangeBase_ValueChangedEvent_get();
      return (RoutedEvent)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public float LargeChange {
    set {
      NoesisGUI_PINVOKE.RangeBase_LargeChange_set(swigCPtr, value);
    } 
    get {
      float ret = NoesisGUI_PINVOKE.RangeBase_LargeChange_get(swigCPtr);
      return ret;
    } 
  }

  public float Maximum {
    set {
      NoesisGUI_PINVOKE.RangeBase_Maximum_set(swigCPtr, value);
    } 
    get {
      float ret = NoesisGUI_PINVOKE.RangeBase_Maximum_get(swigCPtr);
      return ret;
    } 
  }

  public float Minimum {
    set {
      NoesisGUI_PINVOKE.RangeBase_Minimum_set(swigCPtr, value);
    } 
    get {
      float ret = NoesisGUI_PINVOKE.RangeBase_Minimum_get(swigCPtr);
      return ret;
    } 
  }

  public float SmallChange {
    set {
      NoesisGUI_PINVOKE.RangeBase_SmallChange_set(swigCPtr, value);
    } 
    get {
      float ret = NoesisGUI_PINVOKE.RangeBase_SmallChange_get(swigCPtr);
      return ret;
    } 
  }

  public float Value {
    set {
      NoesisGUI_PINVOKE.RangeBase_Value_set(swigCPtr, value);
    } 
    get {
      float ret = NoesisGUI_PINVOKE.RangeBase_Value_get(swigCPtr);
      return ret;
    } 
  }

  new internal static IntPtr GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.RangeBase_GetStaticType();
    return ret;
  }

  internal new static IntPtr Extend(string typeName) {
    return NoesisGUI_PINVOKE.Extend_RangeBase(Marshal.StringToHGlobalAnsi(typeName));
  }
}

}

