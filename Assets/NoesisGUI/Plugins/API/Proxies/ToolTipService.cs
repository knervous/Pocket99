//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public static class ToolTipService {
  public static DependencyProperty BetweenShowDelayProperty {
    set {
      NoesisGUI_PINVOKE.ToolTipService_BetweenShowDelayProperty_set(DependencyProperty.getCPtr(value));
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ToolTipService_BetweenShowDelayProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty HasDropShadowProperty {
    set {
      NoesisGUI_PINVOKE.ToolTipService_HasDropShadowProperty_set(DependencyProperty.getCPtr(value));
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ToolTipService_HasDropShadowProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty HorizontalOffsetProperty {
    set {
      NoesisGUI_PINVOKE.ToolTipService_HorizontalOffsetProperty_set(DependencyProperty.getCPtr(value));
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ToolTipService_HorizontalOffsetProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty InitialShowDelayProperty {
    set {
      NoesisGUI_PINVOKE.ToolTipService_InitialShowDelayProperty_set(DependencyProperty.getCPtr(value));
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ToolTipService_InitialShowDelayProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty IsEnabledProperty {
    set {
      NoesisGUI_PINVOKE.ToolTipService_IsEnabledProperty_set(DependencyProperty.getCPtr(value));
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ToolTipService_IsEnabledProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty IsOpenProperty {
    set {
      NoesisGUI_PINVOKE.ToolTipService_IsOpenProperty_set(DependencyProperty.getCPtr(value));
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ToolTipService_IsOpenProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty PlacementProperty {
    set {
      NoesisGUI_PINVOKE.ToolTipService_PlacementProperty_set(DependencyProperty.getCPtr(value));
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ToolTipService_PlacementProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty PlacementRectangleProperty {
    set {
      NoesisGUI_PINVOKE.ToolTipService_PlacementRectangleProperty_set(DependencyProperty.getCPtr(value));
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ToolTipService_PlacementRectangleProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty PlacementTargetProperty {
    set {
      NoesisGUI_PINVOKE.ToolTipService_PlacementTargetProperty_set(DependencyProperty.getCPtr(value));
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ToolTipService_PlacementTargetProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty ShowDurationProperty {
    set {
      NoesisGUI_PINVOKE.ToolTipService_ShowDurationProperty_set(DependencyProperty.getCPtr(value));
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ToolTipService_ShowDurationProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty ShowOnDisabledProperty {
    set {
      NoesisGUI_PINVOKE.ToolTipService_ShowOnDisabledProperty_set(DependencyProperty.getCPtr(value));
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ToolTipService_ShowOnDisabledProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty ToolTipProperty {
    set {
      NoesisGUI_PINVOKE.ToolTipService_ToolTipProperty_set(DependencyProperty.getCPtr(value));
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ToolTipService_ToolTipProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty VerticalOffsetProperty {
    set {
      NoesisGUI_PINVOKE.ToolTipService_VerticalOffsetProperty_set(DependencyProperty.getCPtr(value));
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ToolTipService_VerticalOffsetProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedEvent ToolTipClosingEvent {
    set {
      NoesisGUI_PINVOKE.ToolTipService_ToolTipClosingEvent_set(RoutedEvent.getCPtr(value));
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ToolTipService_ToolTipClosingEvent_get();
      return (RoutedEvent)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedEvent ToolTipOpeningEvent {
    set {
      NoesisGUI_PINVOKE.ToolTipService_ToolTipOpeningEvent_set(RoutedEvent.getCPtr(value));
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ToolTipService_ToolTipOpeningEvent_get();
      return (RoutedEvent)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static int GetBetweenShowDelay(DependencyObject obj) {
    int ret = NoesisGUI_PINVOKE.ToolTipService_GetBetweenShowDelay(DependencyObject.getCPtr(obj));
    return ret;
  }

  public static void SetBetweenShowDelay(DependencyObject obj, int delay) {
    NoesisGUI_PINVOKE.ToolTipService_SetBetweenShowDelay(DependencyObject.getCPtr(obj), delay);
  }

  public static bool GetHasDropShadow(DependencyObject obj) {
    bool ret = NoesisGUI_PINVOKE.ToolTipService_GetHasDropShadow(DependencyObject.getCPtr(obj));
    return ret;
  }

  public static void SetHasDropShadow(DependencyObject obj, bool shadow) {
    NoesisGUI_PINVOKE.ToolTipService_SetHasDropShadow(DependencyObject.getCPtr(obj), shadow);
  }

  public static float GetHorizontalOffset(DependencyObject obj) {
    float ret = NoesisGUI_PINVOKE.ToolTipService_GetHorizontalOffset(DependencyObject.getCPtr(obj));
    return ret;
  }

  public static void SetHorizontalOffset(DependencyObject obj, float offset) {
    NoesisGUI_PINVOKE.ToolTipService_SetHorizontalOffset(DependencyObject.getCPtr(obj), offset);
  }

  public static int GetInitialShowDelay(DependencyObject obj) {
    int ret = NoesisGUI_PINVOKE.ToolTipService_GetInitialShowDelay(DependencyObject.getCPtr(obj));
    return ret;
  }

  public static void SetInitialShowDelay(DependencyObject obj, int delay) {
    NoesisGUI_PINVOKE.ToolTipService_SetInitialShowDelay(DependencyObject.getCPtr(obj), delay);
  }

  public static bool GetIsEnabled(DependencyObject obj) {
    bool ret = NoesisGUI_PINVOKE.ToolTipService_GetIsEnabled(DependencyObject.getCPtr(obj));
    return ret;
  }

  public static void SetIsEnabled(DependencyObject obj, bool isEnabled) {
    NoesisGUI_PINVOKE.ToolTipService_SetIsEnabled(DependencyObject.getCPtr(obj), isEnabled);
  }

  public static bool GetIsOpen(DependencyObject obj) {
    bool ret = NoesisGUI_PINVOKE.ToolTipService_GetIsOpen(DependencyObject.getCPtr(obj));
    return ret;
  }

  public static void SetIsOpen(DependencyObject obj, bool isOpen) {
    NoesisGUI_PINVOKE.ToolTipService_SetIsOpen(DependencyObject.getCPtr(obj), isOpen);
  }

  public static PlacementMode GetPlacement(DependencyObject obj) {
    PlacementMode ret = (PlacementMode)NoesisGUI_PINVOKE.ToolTipService_GetPlacement(DependencyObject.getCPtr(obj));
    return ret;
  }

  public static void SetPlacement(DependencyObject obj, PlacementMode placement) {
    NoesisGUI_PINVOKE.ToolTipService_SetPlacement(DependencyObject.getCPtr(obj), (int)placement);
  }

  public static Rect GetPlacementRectangle(DependencyObject obj) {
    IntPtr ret = NoesisGUI_PINVOKE.ToolTipService_GetPlacementRectangle(DependencyObject.getCPtr(obj));
    if (ret != IntPtr.Zero) {
      return Marshal.PtrToStructure<Rect>(ret);
    }
    else {
      return new Rect();
    }
  }

  public static void SetPlacementRectangle(DependencyObject obj, Rect rect) {
    NoesisGUI_PINVOKE.ToolTipService_SetPlacementRectangle(DependencyObject.getCPtr(obj), ref rect);
  }

  public static UIElement GetPlacementTarget(DependencyObject obj) {
    IntPtr cPtr = NoesisGUI_PINVOKE.ToolTipService_GetPlacementTarget(DependencyObject.getCPtr(obj));
    return (UIElement)Noesis.Extend.GetProxy(cPtr, false);
  }

  public static void SetPlacementTarget(DependencyObject obj, UIElement target) {
    NoesisGUI_PINVOKE.ToolTipService_SetPlacementTarget(DependencyObject.getCPtr(obj), UIElement.getCPtr(target));
  }

  public static int GetShowDuration(DependencyObject obj) {
    int ret = NoesisGUI_PINVOKE.ToolTipService_GetShowDuration(DependencyObject.getCPtr(obj));
    return ret;
  }

  public static void SetShowDuration(DependencyObject obj, int duration) {
    NoesisGUI_PINVOKE.ToolTipService_SetShowDuration(DependencyObject.getCPtr(obj), duration);
  }

  public static bool GetShowOnDisabled(DependencyObject obj) {
    bool ret = NoesisGUI_PINVOKE.ToolTipService_GetShowOnDisabled(DependencyObject.getCPtr(obj));
    return ret;
  }

  public static void SetShowOnDisabled(DependencyObject obj, bool showOnDisable) {
    NoesisGUI_PINVOKE.ToolTipService_SetShowOnDisabled(DependencyObject.getCPtr(obj), showOnDisable);
  }

  public static object GetToolTip(DependencyObject obj) {
    IntPtr cPtr = NoesisGUI_PINVOKE.ToolTipService_GetToolTip(DependencyObject.getCPtr(obj));
    return Noesis.Extend.GetProxy(cPtr, false);
  }

  public static void SetToolTip(DependencyObject obj, object toolTip) {
    NoesisGUI_PINVOKE.ToolTipService_SetToolTip(DependencyObject.getCPtr(obj), Noesis.Extend.GetInstanceHandle(toolTip));
  }

  public static float GetVerticalOffset(DependencyObject obj) {
    float ret = NoesisGUI_PINVOKE.ToolTipService_GetVerticalOffset(DependencyObject.getCPtr(obj));
    return ret;
  }

  public static void SetVerticalOffset(DependencyObject obj, float offset) {
    NoesisGUI_PINVOKE.ToolTipService_SetVerticalOffset(DependencyObject.getCPtr(obj), offset);
  }

}

}

