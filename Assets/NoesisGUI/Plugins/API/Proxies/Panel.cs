//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class Panel : FrameworkElement {
  internal new static Panel CreateProxy(IntPtr cPtr, bool cMemoryOwn) {
    return new Panel(cPtr, cMemoryOwn);
  }

  internal Panel(IntPtr cPtr, bool cMemoryOwn) : base(cPtr, cMemoryOwn) {
  }

  internal static HandleRef getCPtr(Panel obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  protected Panel() {
  }

  public static int GetZIndex(DependencyObject element) {
    int ret = NoesisGUI_PINVOKE.Panel_GetZIndex(DependencyObject.getCPtr(element));
    return ret;
  }

  public static void SetZIndex(DependencyObject element, int value) {
    NoesisGUI_PINVOKE.Panel_SetZIndex(DependencyObject.getCPtr(element), value);
  }

  public static DependencyProperty BackgroundProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.Panel_BackgroundProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty IsItemsHostProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.Panel_IsItemsHostProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty ZIndexProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.Panel_ZIndexProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public Brush Background {
    set {
      NoesisGUI_PINVOKE.Panel_Background_set(swigCPtr, Brush.getCPtr(value));
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.Panel_Background_get(swigCPtr);
      return (Brush)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public bool IsItemsHost {
    set {
      NoesisGUI_PINVOKE.Panel_IsItemsHost_set(swigCPtr, value);
    } 
    get {
      bool ret = NoesisGUI_PINVOKE.Panel_IsItemsHost_get(swigCPtr);
      return ret;
    } 
  }

  public UIElementCollection Children {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.Panel_Children_get(swigCPtr);
      return (UIElementCollection)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  new internal static IntPtr GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Panel_GetStaticType();
    return ret;
  }

  internal new static IntPtr Extend(string typeName) {
    return NoesisGUI_PINVOKE.Extend_Panel(Marshal.StringToHGlobalAnsi(typeName));
  }
}

}

