//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class ManipulationCompletedEventArgs : InputEventArgs {
  private HandleRef swigCPtr;

  internal ManipulationCompletedEventArgs(IntPtr cPtr, bool cMemoryOwn) : base(cPtr, cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(ManipulationCompletedEventArgs obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~ManipulationCompletedEventArgs() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          NoesisGUI_PINVOKE.delete_ManipulationCompletedEventArgs(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  internal static new void InvokeHandler(Delegate handler, IntPtr sender, IntPtr args) {
    ManipulationCompletedEventHandler handler_ = (ManipulationCompletedEventHandler)handler;
    if (handler_ != null) {
      handler_(Extend.GetProxy(sender, false), new ManipulationCompletedEventArgs(args, false));
    }
  }

  public Noesis.UIElement ManipulationContainer {
    get {
      return GetManipulationContainerHelper();
    }
  }

  public Point ManipulationOrigin {
    get {
      IntPtr ret = NoesisGUI_PINVOKE.ManipulationCompletedEventArgs_ManipulationOrigin_get(swigCPtr);
      if (ret != IntPtr.Zero) {
        return Marshal.PtrToStructure<Point>(ret);
      }
      else {
        return new Point();
      }
    }

  }

  public ManipulationVelocities FinalVelocities {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ManipulationCompletedEventArgs_FinalVelocities_get(swigCPtr);
      ManipulationVelocities ret = (cPtr == IntPtr.Zero) ? null : new ManipulationVelocities(cPtr, false);
      return ret;
    } 
  }

  public ManipulationDelta TotalManipulation {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ManipulationCompletedEventArgs_TotalManipulation_get(swigCPtr);
      ManipulationDelta ret = (cPtr == IntPtr.Zero) ? null : new ManipulationDelta(cPtr, false);
      return ret;
    } 
  }

  public bool IsInertial {
    get {
      bool ret = NoesisGUI_PINVOKE.ManipulationCompletedEventArgs_IsInertial_get(swigCPtr);
      return ret;
    } 
  }

  public ManipulationCompletedEventArgs(object s, RoutedEvent e, Visual manipulationContainer, Point manipulationOrigin, ManipulationVelocities finalVelocities, ManipulationDelta totalManipulation, bool isInertial) : this(NoesisGUI_PINVOKE.new_ManipulationCompletedEventArgs(Noesis.Extend.GetInstanceHandle(s), RoutedEvent.getCPtr(e), Visual.getCPtr(manipulationContainer), ref manipulationOrigin, ManipulationVelocities.getCPtr(finalVelocities), ManipulationDelta.getCPtr(totalManipulation), isInertial), true) {
  }

  public bool Cancel() {
    bool ret = NoesisGUI_PINVOKE.ManipulationCompletedEventArgs_Cancel(swigCPtr);
    return ret;
  }

  private UIElement GetManipulationContainerHelper() {
    IntPtr cPtr = NoesisGUI_PINVOKE.ManipulationCompletedEventArgs_GetManipulationContainerHelper(swigCPtr);
    return (UIElement)Noesis.Extend.GetProxy(cPtr, false);
  }

}

}

